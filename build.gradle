plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'maven-publish'
    id 'org.ajoberstar.grgit' version '5.2.2'
    id 'fabric-loom' version "$fabric_loom_version" apply false
}

group = 'net.vitacraft'
archivesBaseName = 'Discord2FA'
version = "1.0"
description = "$ext.plugin_description"

java {
    toolchain.languageVersion = JavaLanguageVersion.of(21)
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabricmc.net/' }
    maven { url 'https://libraries.minecraft.net/' }
    maven { url 'https://api.modrinth.com/maven' }
    maven { url 'https://repo.papermc.io/repository/maven-public/' }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
}

dependencies {
    implementation project(':common')
    implementation project(':bukkit')
    implementation project(':fabric')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
}

processResources {
    filesMatching(['fabric.mod.json', 'plugin.yml', 'mcmod.info', 'META-INF/mods.toml', 'pack.mcmeta']) {
        expand project.properties
    }
}

shadowJar {
    archiveClassifier.set('')
    dependencies {
        exclude("META-INF/versions/**")
        include(dependency("${project.group}:common"))
        include(project(':common'))
        include(project(':bukkit'))
        include(project(':fabric'))
    }
}

jar {
    finalizedBy shadowJar
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'

    java {
        toolchain.languageVersion = JavaLanguageVersion.of(21)
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        if (project.name != 'common') {
            implementation project(':common')
        }
        compileOnly 'org.jetbrains:annotations:24.1.0'
        compileOnly 'org.projectlombok:lombok:1.18.32'

        annotationProcessor 'org.projectlombok:lombok:1.18.32'

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    }

    processResources {
        filesMatching(['fabric.mod.json', 'plugin.yml', 'mcmod.info', 'META-INF/mods.toml', 'pack.mcmeta']) {
            expand project.properties
        }
    }

    shadowJar {
        archiveClassifier.set('')
    }
}

logger.lifecycle("Building ${project.name} ${version} by <AUTHOR>")
